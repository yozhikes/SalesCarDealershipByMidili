<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>